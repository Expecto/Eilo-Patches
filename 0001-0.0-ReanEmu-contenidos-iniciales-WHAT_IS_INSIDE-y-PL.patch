From d3dd5464f5996a2350eb69bc6f6b1af7c59ac480 Mon Sep 17 00:00:00 2001
From: Eilo <eilo2518@gmail.com>
Date: Thu, 15 Dec 2011 17:30:15 -0500
Subject: [PATCH 01/14] =?UTF-8?q?0.0=20ReanEmu=20contenidos=20iniciales,=20W?=
 =?UTF-8?q?HAT=5FIS=5FINSIDE=20y=20PLANIFICACION=20a=C3=B1adidos?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 CMakeLists.txt                                     |    2 +-
 PLANIFICACION                                      |  161 ++++++++++++++++++++
 README                                             |   41 +++++-
 WHAT_IS_INSIDE                                     |   75 +++++++++
 cmake/showoptions.cmake                            |    6 +-
 src/server/authserver/Main.cpp                     |   29 +++-
 src/server/authserver/Realms/RealmList.cpp         |    4 +-
 src/server/authserver/authserver.conf.dist         |    6 +-
 src/server/authserver/authserver.rc                |    4 +-
 src/server/shared/SystemConfig.h                   |    2 +-
 src/server/worldserver/CommandLine/CliRunnable.cpp |   10 +-
 src/server/worldserver/Main.cpp                    |   10 +-
 src/server/worldserver/Master.cpp                  |   38 +++--
 src/server/worldserver/worldserver.conf.dist       |    2 +-
 src/server/worldserver/worldserver.rc              |    4 +-
 15 files changed, 343 insertions(+), 51 deletions(-)
 create mode 100644 PLANIFICACION
 create mode 100644 WHAT_IS_INSIDE

diff --git a/CMakeLists.txt b/CMakeLists.txt
index dfa6488..0e70a77 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -9,7 +9,7 @@
 # implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 
 # Set projectname (must be done AFTER setting configurationtypes)
-project(TrinityCore)
+project(ReanEmu)
 
 # CMake policies (can not be handled elsewhere)
 cmake_minimum_required(VERSION 2.6)
diff --git a/PLANIFICACION b/PLANIFICACION
new file mode 100644
index 0000000..f2f10fc
--- /dev/null
+++ b/PLANIFICACION
@@ -0,0 +1,161 @@
+== ReanEmu ==
+#####################################################################
+##  Planificacion de repositorios y de Avances del nuevo emulador  ##
+#####################################################################
+La planificacion y organizacion adecuada de la informacion como del
+equipo y repositorios es uno de los aspectos mas importantes para
+lograr el objetivo con este proyecto de manera que:
+
+ -----------
+| Milesones |
+ -----------
+El repositorio no puede ser un desorden por lo que se fijarán metas 
+concretas en 5 MILESTONES:
+
+Milestone0.0 -- Inicial
+Milestone1.0 -- Caracteristicas principales y adicionales para el emulador
+                tales como ahbot, wintergrasp, warden, ac1, reset duel, etc.
+Milestone2.0 -- Principales arreglos a dungeons e instances, sobre todo las
+                raids de ICC, Sagrario Rubi y Ulduar.
+Milestone3.0 -- Arreglos a Spells, sobre todo para estabilidad del pve y del
+                pvp dentro de los reinos.
+Milestone4.0 -- Arreglos en quests, y cadenas de mision, esto incluye scripts
+                en c++ y SmartAI.
+Milestone5.0 -- Traducciones, e inclusion de varios dentro de tablas y strings
+                del emulador, ya sea en c++ o en sqls.
+
+ ---------
+| Commits |
+ ---------
+Cada COMMIT se llevara a cabo con los avances individuales por repositorios 
+personales y se escribiran por cada una de los cambios minimas que hagan 
+referentes al mismo tema y se clasificaran tambien con una estructura para 
+que asemeje a un solo topico en concreto:
+
+Nombre: Descripcion
+------  -----------
+Spell: texto e ID
+Script: texto
+Instance: texto
+Quest: texto script ID y sql
+Reputacion: texto script ID y sql
+SQL: dependiendo e ID
+
+Todos los commits seran en ESPAÑOl, excepto los nombres referentes a cosas 
+del emulador como tal, spells, nombres de las mismas, nombres de archivos, 
+dependencias, etc. Los nombres de archivos que describan los cambios en sql,
+serán en ESPAÑOL sin Ñ y se ajustarán a la cronologia de tc en la carpeta 
+sql/update, ya sea en world, characters o auth de acuerdo a lo que corresponda 
+cada query o grupo en concreto asi:
+
+año-mes-dia-numero mayor a 100_carpeta_texto_explicativo.sql
+--- --- --- ------------------ ---------------------------------------
+2011_09_01_102_world_wintergrasp_torretas.sql
+
+Ojo, siempre mayor a cien, para no pisar cualquier commit de tc. 
+
+ ------------
+| Desarrollo |
+ ------------
+Otra cosa que hay que tomar en cuenta es el hecho de que si algo es de codigo 
+de otra persona o equipo de personas en concreto hay que mencionarlo por los 
+copyrights, y si nosotros hacemos algo que no lo haya hecho nadie, añadir el 
+copyright respectivamente de cada uno individualmente y el de ReanEmu, sobre 
+todo si en una script se le ha hecho mejoras notables y de peso.
+
+* Copyright (C) ReanEmu 2011 <https://github.com/eilo/ReanEmu>
+
+Esto tambien nos servira para añadirlo al What_Is_Inside del repo
+
+ ----------
+| Branches |
+ ----------
+De ahora en adelante hay q tener una estructura ordenada y simple de manera que 
+no solapemos trabajo de otro dev y mucho peor, tratar de unirlas, porque tampoco 
+es necesario unir todas las branches entre si.
+
+La modalidad de branches estara en 3 grupos asi:
+      1                     2                   3
+ -----------    --------------------------    ------
+(tc)&(warden)  (developers)->(experimental)  (master)
+
+De manera general:
+----------------
+--Primer Grupo--
+----------------
+tc:     se actualiza solo con cosas de TC y no se mezcla aqui, nada de lo del resto 
+        de repos, es decir una tc limpia tal cual.
+	    
+		Tag -> (tc)
+
+warden: esta lleva solo lo de warden, nada mezclado aqui, es decir una warden limpia.
+	    
+		Tag -> (warden)
+
+-----------------
+--Segundo Grupo--
+-----------------
+Estas branches seran hechas a partir de experimental en las cuentas personales 
+de git de cada uno, sin embargo los commits finales apareceran sobre el branch 
+experimental del repo.
+
+Cada developer hara un FORK de ReanEmu a su cuenta personal de github e irá pusheando
+los cambios y mejoras con previo aviso y consentimiento de los demas developers en el
+repo de la Organizacion.
+
+Aqui algunos lineamientos para los developers:
+
+1. Siempre se commiteara cada accion con un commit individual por mas pequeño que sea. 
+   Dado que en algun momento se necesita revertir, por que no funcione bien o porque 
+   tc lo arreglase en algun momento. 
+
+2. Se mantendra el codestyling de espacios en blanco con espaciadora, nunca con tabs 
+   en el codigo o el emulador pierde condescendencia y tambien porque tc mantiene estas
+   reglas basicas para coding. 
+   
+3. Siempre se comunicara al resto de devs que es lo que se esta haciendo y se tendra 
+   claro siempre los repos que a cada uno se le ha asignado. Si algun commit tiene 
+   referencia a alguno de los repos de otro dev, es imprescindible comunicarlo. 
+   
+4. Se depreca el cherry pick por razones de conflictos anteriores, y se lo permitirá 
+   unicamente con un commit contemporaneo, es decir que no supere 1 dia atras de la
+   revision punta (head) que tengamos nosotros.
+	   
+5. Se unirá cada cierto tiempo todo el material que consideremos como "funcional" de 
+   cada uno de nuestros avances de manera que aqui se haga las primeras pruebas y se 
+   pueda ver los errores en conjunto. 
+   
+6. Este branch no es para solucionar errores de los commits personales, es decir, si 
+   se equivocaron un typo, lo corrigen en vuestro branch personal y una vez corregido, 
+   lo traen al experimental. No al revés. 
+   
+7. Cada material pasa a ser revisado mediante pull requests, incluido material interno
+   que aun no se haya testeado en ningun reino, de manera que se pueda deliberar sobre
+   el uso que se le dará y condiciones.
+   
+8. Este branch se aplicará primero en el Reino de Pruebas para ir sacando el changelog. 
+   Aqui en este branch se unificaran los What is inside de cada uno de los individuales 
+   y se expondra como un solo archivo.
+   
+9. Cada vez q necesiteis revertir algo, se lo hara en el mismo commit de cada uno y en su 
+   momento debera ser notificado al respectivo developer y su causa. 
+   
+        Tag -> (experimental)
+	  
+----------------			  
+--Tercer Grupo--
+----------------
+master: Aqui se comentará el trabajo final, por fechas, testeado en experimental y que 
+        contenga la característica de estabilidad y funcionalidad con el tag de Milestone#.#. 
+		En master vienen las versiones finales, si ocurre algun fix para la version final, 
+		tiene que pasar el respectivo proceso, por el repo de merge, luego al individual de 
+		todos, y despues al experimental y finalmente al master. De ninguna manera permitido 
+		al reves.
+
+		Tag -> (master) & [automatico]Tag -> (head)
+
+El proceso en general se lograra hacer mas llevadero y sobre todo nos ayudara para alcanzar 
+esta meta inmensa como equipo de desarrollo de ReanEmu.
+
+Saludos
+Eilo		
\ No newline at end of file
diff --git a/README b/README
index f2ae18f..60f2df7 100644
--- a/README
+++ b/README
@@ -1,6 +1,45 @@
-= TrinityCore -- General information =
+== ReanEmu ==
+
+ReanEmu es un emulador creado con la unión de varios repositorios reconocidos y 
+código nuestro con el afán de complementarlos y completarlos a todos en 
+un único emulador que pueda brindar codigo util, actualizado y estable. Mira 
+nuestro archivo WHAT_IS_INSIDE para mayor detalle de lo que el emulador contiene.
+
+Hemos generado una metodología y planificación interna la cual nos permite estar 
+al día en las actualizaciones y mejoras de trinitycore, parches propios y de
+repositorios conocidos, puedes leerla en el archivo PLANIFICACION, si alguna 
+sugerencia y/o aporte que quieras darnos tienes la mayor bienvenida en el equipo 
+de los programadores de este repositorio basado en trinitycore.
+
+Actualizaciones y novedades en twitter: http://twitter.com/ReanEmu 
+
+Gracias a quienes hacen este proyecto posible y su respectivo crédito a:
 
 Copyright (C) TrinityCore (http://www.trinitycore.org)
+Copyright (C) Eilo (https://github.com/eilo)
+Copyright (C) Hispano (https://github.com/Hispano)
+Copyright (C) Ws (https://github.com/wsrean)
+Copyright (C) Andron (https://github.com/Andron-Juanka)
+Copyright (C) Seither (https://github.com/Seither)
+Copyright (C) WoWReAn Emu (https://github.com/eilo/wowrean-emu)
+Copyright (C) Leak (https://github.com/leak/TrinityCore)
+Copyright (C) ChaosCore (https://github.com/Locknes/ChaosCore)
+Copyright (C) Shadez (https://github.com/Shadez/wowarmory)
+Copyright (C) Retriman (https://github.com/Retriman/TrinityCore)
+Copyright (C) HachasyDados (https://github.com/HachasyDados/HD-TCore)
+Copyright (C) AliveCore (https://github.com/DarkSoe/ALiveCoreRC2)
+Copyright (C) ZoneLimit (https://github.com/Jildor/ZoneLimit)
+Copyright (C) Darkman (https://github.com/darkman1983/TrinityCore)
+Copyright (C) Independent (https://github.com/Independent/Core)
+Copyright (C) Venugh (https://github.com/Venugh/TrinityCore)
+Copyright (C) SerenityCore (https://github.com/SerenityTeam/SerenityCore)
+Copyright (C) WarHead (https://github.com/WarHead/uwom-server)
+Copyright (C) CGDev (https://github.com/CGDev/CG-Blizzlike)
+Copyright (C) FaceCore (https://github.com/SignFinder/FaceCore)
+Copyright (C) MythCore (https://github.com/SeTM/MythCore)
+Copyright (C) Greymane (https://github.com/Greymane/ChaosCore)
+Copyright (C) TcRc (https://github.com/TrinityCoreRu)
+Copyright (C) Mouse (https://github.com/Mouse/tc2-patches)
 
   Trinity Core is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
diff --git a/WHAT_IS_INSIDE b/WHAT_IS_INSIDE
new file mode 100644
index 0000000..535c346
--- /dev/null
+++ b/WHAT_IS_INSIDE
@@ -0,0 +1,75 @@
+== ReanEmu ==
+
+What is inside: (que hay dentro)
+
+ReanEmu posee muchos fixes y mejoras a base de algunos repos y autores muy 
+conocidos además de los nuestros propios, este documento detalla los componentes,
+parches y/o código que contiene dentro este emulador de manera resumida:
+
+#########
+#ReanEmu#
+#########
+Milestone0.0: Reiniciando el repo y readaptando cosas varias, inclusion de nuevos
+              developers en git y la inclusion de texto de planeacion para union 
+			  eficiente de codigo reestructurando modo de trabajo y organizando 
+			  carpetas, branches, etc
+
+			  
+##################################
+# Trintitycore hasta esta fecha: #
+##################################
+
+
+###############
+# Adicionales #
+###############
+
+
+###############
+# Jugabilidad #
+###############
+
+
+###############################
+# Dungeons e Instances Varias #
+###############################
+
+
+#################
+# Sagrario Rubí #
+#################
+
+
+#######
+# ICC #
+#######
+
+
+##########
+# Ulduar #
+##########
+
+
+#######################
+# Hechizos y Talentos #
+#######################
+
+
+##################
+# Items y Bonus #
+#################
+
+
+############################
+# Soporte Quests y Eventos #
+############################
+
+
+#################
+# Traducciones: #
+#################
+
+
+##########
+# Custom #
+##########
diff --git a/cmake/showoptions.cmake b/cmake/showoptions.cmake
index 31e1b41..4fbd0dd 100644
--- a/cmake/showoptions.cmake
+++ b/cmake/showoptions.cmake
@@ -1,9 +1,9 @@
 # output generic information about the core and buildtype chosen
 message("")
-message("* TrinityCore rev. hash  : ${rev_hash}")
-message("* TrinityCore rev. date  : ${rev_date}")
+message("* ReanEmu rev. hash  : ${rev_hash}")
+message("* ReanEmu rev. date  : ${rev_date}")
 if( UNIX )
-  message("* TrinityCore buildtype  : ${CMAKE_BUILD_TYPE}")
+  message("* ReanEmu buildtype  : ${CMAKE_BUILD_TYPE}")
 endif()
 message("")
 
diff --git a/src/server/authserver/Main.cpp b/src/server/authserver/Main.cpp
index 8226868..5c40f0f 100755
--- a/src/server/authserver/Main.cpp
+++ b/src/server/authserver/Main.cpp
@@ -100,10 +100,23 @@ extern int main(int argc, char **argv)
     sLog->Initialize();
 
     sLog->outString("%s (authserver)", _FULLVERSION);
-    sLog->outString("<Ctrl-C> to stop.\n");
-    sLog->outString("Using configuration file %s.", cfg_file);
-
-    sLog->outDetail("%s (Library: %s)", OPENSSL_VERSION_TEXT, SSLeay_version(SSLEAY_VERSION));
+    sLog->outString("Presione <Ctrl-C> para detenerlo.\n");
+    sLog->outString("El archivo de configuration usado es %s.", cfg_file);
+
+    sLog->outString( "   _______       __ " );
+    sLog->outString( "  /\\  ____\\   __/\\ \\      ________" );
+    sLog->outString( "  \\ \\ \\___/  /\\_\\ \\ \\    /\\  ____ \\" );
+    sLog->outString( "   \\ \\ \\____ \\/_/_ \\ \\   \\ \\ \\__/\\ \\" );
+    sLog->outString( "    \\ \\  ___\\  /\\ \\ \\ \\   \\ \\ \\ \\ \\ \\" );
+    sLog->outString( "     \\ \\ \\__/  \\ \\ \\ \\ \\   \\ \\ \\___\\ \\" );
+    sLog->outString( "      \\ \\ \\_____\\ \\ \\ \\ \\___\\ \\_______\\" );
+    sLog->outString( "       \\ \\_______\\/_/\\ \\_____\\/_______/" );
+    sLog->outString( "        \\/_______/    \\/_____/       Auth" );
+    sLog->outString( "" );
+    sLog->outString( "   * Basado en TrinityCore *" );
+    sLog->outString( "      Por: Eilo-Jesus-Ws         " );
+
+    sLog->outDetail("%s (Libreria: %s)", OPENSSL_VERSION_TEXT, SSLeay_version(SSLEAY_VERSION));
 
 #if defined (ACE_HAS_EVENT_POLL) || defined (ACE_HAS_DEV_POLL)
     ACE_Reactor::instance(new ACE_Reactor(new ACE_Dev_Poll_Reactor(ACE::max_handles(), 1), 1), true);
@@ -184,7 +197,7 @@ extern int main(int argc, char **argv)
                 if (!curAff)
                     sLog->outError("Processors marked in UseProcessors bitmask (hex) %x not accessible for authserver. Accessible processors bitmask (hex): %x", Aff, appAff);
                 else if (SetProcessAffinityMask(hProcess, curAff))
-                    sLog->outString("Using processors (bitmask, hex): %x", curAff);
+                    sLog->outString("Usando mascara de procesadores (bitmask, hex): %x", curAff);
                 else
                     sLog->outError("Can't set used processors (hex): %x", curAff);
             }
@@ -196,7 +209,7 @@ extern int main(int argc, char **argv)
         if (Prio)
         {
             if (SetPriorityClass(hProcess, HIGH_PRIORITY_CLASS))
-                sLog->outString("The auth server process priority class has been set to HIGH");
+                sLog->outString("Servidor de autenticacion ha sido habilitado a prioridad ALTA");
             else
                 sLog->outError("Can't set auth server process priority class.");
             sLog->outString();
@@ -231,7 +244,7 @@ extern int main(int argc, char **argv)
         if ((++loopCounter) == numLoops)
         {
             loopCounter = 0;
-            sLog->outDetail("Ping MySQL to keep connection alive");
+            sLog->outDetail("Ping MySQL para mantener las conexiones activas");
             LoginDatabase.KeepAlive();
         }
     }
@@ -239,7 +252,7 @@ extern int main(int argc, char **argv)
     // Close the Database Pool and library
     StopDB();
 
-    sLog->outString("Halting process...");
+    sLog->outString("Deteniendo proceso...");
     return 0;
 }
 
diff --git a/src/server/authserver/Realms/RealmList.cpp b/src/server/authserver/Realms/RealmList.cpp
index c81af80..918cacc 100755
--- a/src/server/authserver/Realms/RealmList.cpp
+++ b/src/server/authserver/Realms/RealmList.cpp
@@ -68,7 +68,7 @@ void RealmList::UpdateIfNeed()
 
 void RealmList::UpdateRealms(bool init)
 {
-    sLog->outDetail("Updating Realm List...");
+    sLog->outDetail("Actualizando Lista de Reinos..");
 
     PreparedStatement *stmt = LoginDatabase.GetPreparedStatement(LOGIN_GET_REALMLIST);
     PreparedQueryResult result = LoginDatabase.Query(stmt);
@@ -93,7 +93,7 @@ void RealmList::UpdateRealms(bool init)
             UpdateRealm(realmId, name, address, port, icon, color, timezone, (allowedSecurityLevel <= SEC_ADMINISTRATOR ? AccountTypes(allowedSecurityLevel) : SEC_ADMINISTRATOR), pop, build);
 
             if (init)
-                sLog->outString("Added realm \"%s\".", fields[1].GetCString());
+                sLog->outString("Añadido el Reino \"%s\".", fields[1].GetCString());
         }
         while (result->NextRow());
     }
diff --git a/src/server/authserver/authserver.conf.dist b/src/server/authserver/authserver.conf.dist
index 86423d5..6db18b4 100644
--- a/src/server/authserver/authserver.conf.dist
+++ b/src/server/authserver/authserver.conf.dist
@@ -1,6 +1,6 @@
-###############################################
-# Trinity Core Auth Server configuration file #
-###############################################
+##########################################
+# ReanEmu Auth Server configuration file #
+##########################################
 [authserver]
 
 ###################################################################################################
diff --git a/src/server/authserver/authserver.rc b/src/server/authserver/authserver.rc
index 850fa60..7a02d99 100755
--- a/src/server/authserver/authserver.rc
+++ b/src/server/authserver/authserver.rc
@@ -76,12 +76,12 @@ BEGIN
         BLOCK "080004b0"
         BEGIN
             VALUE "CompanyName",        VER_COMPANYNAME_STR
-            VALUE "FileDescription",    "TrinityCore Authentication Server Daemon"
+            VALUE "FileDescription",    "ReanEmu Authentication Server Daemon"
             VALUE "FileVersion",        VER_FILEVERSION_STR
             VALUE "InternalName",       "authserver"
             VALUE "LegalCopyright",     VER_LEGALCOPYRIGHT_STR
             VALUE "OriginalFilename",   "authserver.exe"
-            VALUE "ProductName",        "TrinityCore Authentication Server"
+            VALUE "ProductName",        "ReanEmu Authentication Server"
             VALUE "ProductVersion",     VER_PRODUCTVERSION_STR
         END
     END
diff --git a/src/server/shared/SystemConfig.h b/src/server/shared/SystemConfig.h
index 18acc73..b3308fb 100755
--- a/src/server/shared/SystemConfig.h
+++ b/src/server/shared/SystemConfig.h
@@ -24,7 +24,7 @@
 #include "Define.h"
 #include "revision.h"
 
-#define _PACKAGENAME "TrinityCore"
+#define _PACKAGENAME "ReanEmu"
 
 #if TRINITY_ENDIAN == TRINITY_BIGENDIAN
 # define _ENDIAN_STRING "big-endian"
diff --git a/src/server/worldserver/CommandLine/CliRunnable.cpp b/src/server/worldserver/CommandLine/CliRunnable.cpp
index 6135252..4fea858 100755
--- a/src/server/worldserver/CommandLine/CliRunnable.cpp
+++ b/src/server/worldserver/CommandLine/CliRunnable.cpp
@@ -112,7 +112,7 @@ void utf8print(void* /*arg*/, const char* str)
 
 void commandFinished(void*, bool /*success*/)
 {
-    printf("TC> ");
+    printf("ReanEmu> ");
     fflush(stdout);
 }
 
@@ -573,7 +573,7 @@ void CliRunnable::run()
 
     // print this here the first time
     // later it will be printed after command queue updates
-    printf("TC>");
+    printf("ReanEmu>");
 
     ///- As long as the World is running (no World::m_stopEvent), get the command line and handle it
     while (!World::IsStopped())
@@ -586,7 +586,7 @@ void CliRunnable::run()
         char commandbuf[256];
         command_str = fgets(commandbuf, sizeof(commandbuf), stdin);
 #else
-        command_str = readline("TC>");
+        command_str = readline("ReanEmu>");
         rl_bind_key('\t', rl_complete);
 #endif
 
@@ -602,7 +602,7 @@ void CliRunnable::run()
             if (!*command_str)
             {
 #if PLATFORM == PLATFORM_WINDOWS
-                printf("TC>");
+                printf("ReanEmu>");
 #endif
                 continue;
             }
@@ -611,7 +611,7 @@ void CliRunnable::run()
             if (!consoleToUtf8(command_str, command))         // convert from console encoding to utf8
             {
 #if PLATFORM == PLATFORM_WINDOWS
-                printf("TC>");
+                printf("ReanEmu>");
 #endif
                 continue;
             }
diff --git a/src/server/worldserver/Main.cpp b/src/server/worldserver/Main.cpp
index 1ce247d..e85d05c 100755
--- a/src/server/worldserver/Main.cpp
+++ b/src/server/worldserver/Main.cpp
@@ -38,8 +38,8 @@
 #ifdef _WIN32
 #include "ServiceWin32.h"
 char serviceName[] = "worldserver";
-char serviceLongName[] = "TrinityCore world service";
-char serviceDescription[] = "TrinityCore World of Warcraft emulator world service";
+char serviceLongName[] = "ReanEmu world service";
+char serviceDescription[] = "ReanEmu World of Warcraft emulator world service";
 /*
  * -1 - not in service mode
  *  0 - stopped
@@ -135,10 +135,10 @@ extern int main(int argc, char **argv)
         sLog->outError("Verify that the file exists and has \'[worldserver]' written in the top of the file!");
         return 1;
     }
-    sLog->outString("Using configuration file %s.", cfg_file);
+    sLog->outString("Usando el archivo de configuracion %s.", cfg_file);
 
-    sLog->outDetail("%s (Library: %s)", OPENSSL_VERSION_TEXT, SSLeay_version(SSLEAY_VERSION));
-    sLog->outDetail("Using ACE: %s", ACE_VERSION);
+    sLog->outDetail("%s (Libreria: %s)", OPENSSL_VERSION_TEXT, SSLeay_version(SSLEAY_VERSION));
+    sLog->outDetail("Usando version de ACE: %s", ACE_VERSION);
 
     ///- and run the 'Master'
     /// \todo Why do we need this 'Master'? Can't all of this be in the Main as for Realmd?
diff --git a/src/server/worldserver/Master.cpp b/src/server/worldserver/Master.cpp
index 42d72aa..8c7320c 100755
--- a/src/server/worldserver/Master.cpp
+++ b/src/server/worldserver/Master.cpp
@@ -124,17 +124,21 @@ int Master::Run()
     seed1.SetRand(16 * 8);
 
     sLog->outString("%s (worldserver-daemon)", _FULLVERSION);
-    sLog->outString("<Ctrl-C> to stop.\n");
-
-    sLog->outString(" ______                       __");
-    sLog->outString("/\\__  _\\       __          __/\\ \\__");
-    sLog->outString("\\/_/\\ \\/ _ __ /\\_\\    ___ /\\_\\ \\, _\\  __  __");
-    sLog->outString("   \\ \\ \\/\\`'__\\/\\ \\ /' _ `\\/\\ \\ \\ \\/ /\\ \\/\\ \\");
-    sLog->outString("    \\ \\ \\ \\ \\/ \\ \\ \\/\\ \\/\\ \\ \\ \\ \\ \\_\\ \\ \\_\\ \\");
-    sLog->outString("     \\ \\_\\ \\_\\  \\ \\_\\ \\_\\ \\_\\ \\_\\ \\__\\\\/`____ \\");
-    sLog->outString("      \\/_/\\/_/   \\/_/\\/_/\\/_/\\/_/\\/__/ `/___/> \\");
-    sLog->outString("                                 C O R E  /\\___/");
-    sLog->outString("http://TrinityCore.org                    \\/__/\n");
+    sLog->outString("Presione <Ctrl-C> para detenerlo.\n");
+
+    sLog->outString( "   _______       __ " );
+    sLog->outString( "  /\\  ____\\   __/\\ \\      ________" );
+    sLog->outString( "  \\ \\ \\___/  /\\_\\ \\ \\    /\\  ____ \\" );
+    sLog->outString( "   \\ \\ \\____ \\/_/_ \\ \\   \\ \\ \\__/\\ \\" );
+    sLog->outString( "    \\ \\  ___\\  /\\ \\ \\ \\   \\ \\ \\ \\ \\ \\" );
+    sLog->outString( "     \\ \\ \\__/  \\ \\ \\ \\ \\   \\ \\ \\___\\ \\" );
+    sLog->outString( "      \\ \\ \\_____\\ \\ \\ \\ \\___\\ \\_______\\" );
+    sLog->outString( "       \\ \\_______\\/_/\\ \\_____\\/_______/" );
+    sLog->outString( "        \\/_______/    \\/_____/       World" );
+    sLog->outString( "" );
+    sLog->outString( "   * Basado en TrinityCore *" );
+    sLog->outString( "      Por: Eilo-Jesus-Ws         " );
+
 
 #ifdef USE_SFMT_FOR_RNG
     sLog->outString("\n");
@@ -221,7 +225,7 @@ int Master::Run()
                 else
                 {
                     if (SetProcessAffinityMask(hProcess, curAff))
-                        sLog->outString("Using processors (bitmask, hex): %x", curAff);
+                        sLog->outString("Usando mascara de procesadores (bitmask, hex): %x", curAff);
                     else
                         sLog->outError("Can't set used processors (hex): %x", curAff);
                 }
@@ -235,7 +239,7 @@ int Master::Run()
         if (Prio)
         {
             if (SetPriorityClass(hProcess, HIGH_PRIORITY_CLASS))
-                sLog->outString("worldserver process priority class set to HIGH");
+                sLog->outString("Servidor de Mundo ha sido habilitada con prioridad ALTA");
             else
                 sLog->outError("Can't set worldserver process priority class.");
             sLog->outString("");
@@ -275,7 +279,7 @@ int Master::Run()
     // set server online (allow connecting now)
     LoginDatabase.DirectPExecute("UPDATE realmlist SET color = color & ~%u, population = 0 WHERE id = '%u'", REALM_FLAG_INVALID, realmID);
 
-    sLog->outString("%s (worldserver-daemon) ready...", _FULLVERSION);
+    sLog->outString("%s (worldserver-daemon) listo...", _FULLVERSION);
     sWorldSocketMgr->Wait();
 
     if (soap_thread)
@@ -298,7 +302,7 @@ int Master::Run()
 
     _StopDB();
 
-    sLog->outString("Halting process...");
+    sLog->outString("Deteniendo proceso...");
 
     if (cliThread)
     {
@@ -446,7 +450,7 @@ bool Master::_StartDB()
         sLog->outError("Realm ID not defined in configuration file");
         return false;
     }
-    sLog->outString("Realm running as realm ID %d", realmID);
+    sLog->outString("Reino ID actualmente corriendo: %d", realmID);
 
     ///- Initialize the DB logging system
     sLog->SetLogDBLater(ConfigMgr::GetBoolDefault("EnableLogDB", false)); // set var to enable DB logging once startup finished.
@@ -461,7 +465,7 @@ bool Master::_StartDB()
 
     sWorld->LoadDBVersion();
 
-    sLog->outString("Using World DB: %s", sWorld->GetDBVersion());
+    sLog->outString("DB usada para Mundo: %s", sWorld->GetDBVersion());
     return true;
 }
 
diff --git a/src/server/worldserver/worldserver.conf.dist b/src/server/worldserver/worldserver.conf.dist
index 1e37f50..93f6793 100644
--- a/src/server/worldserver/worldserver.conf.dist
+++ b/src/server/worldserver/worldserver.conf.dist
@@ -1,5 +1,5 @@
 ################################################
-# Trinity Core World Server configuration file #
+# ReanEmu World Server configuration file #
 ################################################
 [worldserver]
 
diff --git a/src/server/worldserver/worldserver.rc b/src/server/worldserver/worldserver.rc
index 7712a50..055429e 100755
--- a/src/server/worldserver/worldserver.rc
+++ b/src/server/worldserver/worldserver.rc
@@ -76,12 +76,12 @@ BEGIN
         BLOCK "080004b0"
         BEGIN
             VALUE "CompanyName",        VER_COMPANYNAME_STR
-            VALUE "FileDescription",    "TrinityCore World Server Daemon"
+            VALUE "FileDescription",    "ReanEmu World Server Daemon"
             VALUE "FileVersion",        VER_FILEVERSION_STR
             VALUE "InternalName",       "worldserver"
             VALUE "LegalCopyright",     VER_LEGALCOPYRIGHT_STR
             VALUE "OriginalFilename",   "worldserver.exe"
-            VALUE "ProductName",        "TrinityCore World Server"
+            VALUE "ProductName",        "ReanEmu World Server"
             VALUE "ProductVersion",     VER_PRODUCTVERSION_STR
         END
     END
-- 
1.7.6.msysgit.0

